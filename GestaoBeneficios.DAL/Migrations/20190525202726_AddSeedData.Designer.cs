// <auto-generated />
using System;
using GestaoBeneficios.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestaoBeneficios.DAL.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20190525202726_AddSeedData")]
    partial class AddSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestaoBeneficios.DAL.Entidades.Beneficio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FatorConversao");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Beneficios");
                });

            modelBuilder.Entity("GestaoBeneficios.DAL.Entidades.BeneficioColaborador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BeneficioId");

                    b.Property<long?>("ColaboradorId");

                    b.Property<long>("Id_Beneficio");

                    b.Property<long>("Id_Colaborador");

                    b.Property<int>("Quantidade");

                    b.Property<double>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("BeneficioId");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("BeneficiosColaboradores");
                });

            modelBuilder.Entity("GestaoBeneficios.DAL.Entidades.Cargo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<double>("ValorBeneficio");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("GestaoBeneficios.DAL.Entidades.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BeneficioId");

                    b.Property<string>("Campo");

                    b.Property<long?>("ColaboradorId");

                    b.Property<DateTime>("Data");

                    b.Property<long?>("Id_Beneficio");

                    b.Property<long?>("Id_Colaborador");

                    b.Property<string>("Operacao");

                    b.Property<string>("ValorAnterior");

                    b.Property<string>("ValorAtual");

                    b.HasKey("Id");

                    b.HasIndex("BeneficioId");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("GestaoBeneficios.DAL.Entidades.Perfil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Perfis");

                    b.HasData(
                        new { Id = 1L, Tipo = "Administrador" },
                        new { Id = 2L, Tipo = "Colaborador" }
                    );
                });

            modelBuilder.Entity("GestaoBeneficios.DAL.Entidades.Pessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF");

                    b.Property<long?>("CargoId");

                    b.Property<DateTime>("DataAdmissao");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<long?>("Id_Cargo");

                    b.Property<long?>("Id_Perfil");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<long?>("PerfilId");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("PerfilId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("GestaoBeneficios.DAL.Entidades.BeneficioColaborador", b =>
                {
                    b.HasOne("GestaoBeneficios.DAL.Entidades.Beneficio", "Beneficio")
                        .WithMany()
                        .HasForeignKey("BeneficioId");

                    b.HasOne("GestaoBeneficios.DAL.Entidades.Pessoa", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorId");
                });

            modelBuilder.Entity("GestaoBeneficios.DAL.Entidades.Log", b =>
                {
                    b.HasOne("GestaoBeneficios.DAL.Entidades.Beneficio", "Beneficio")
                        .WithMany()
                        .HasForeignKey("BeneficioId");

                    b.HasOne("GestaoBeneficios.DAL.Entidades.Pessoa", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorId");
                });

            modelBuilder.Entity("GestaoBeneficios.DAL.Entidades.Pessoa", b =>
                {
                    b.HasOne("GestaoBeneficios.DAL.Entidades.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");

                    b.HasOne("GestaoBeneficios.DAL.Entidades.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId");
                });
#pragma warning restore 612, 618
        }
    }
}
